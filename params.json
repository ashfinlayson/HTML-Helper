{"body":"# Description\r\n\r\n **HTML Helper** is a complete PHP class which provide a really simple markup which will make your HTML rendering easier than ever.\r\n\r\n----------\r\n\r\n# Feedback\r\n Feel free to contact me via [Email](mailto:miranda@lunnaly.com) anytime you want. If you like this class and use it in somewhere, please, send me a feedback with your opinion about my job. If you are interested in my job, hire me at [Lunnaly](http://lunnaly.com \"Lunnaly's Website\"). Fork this repo, I appreciate! =)\r\n\r\n----------\r\n\r\n# Installing\r\n```php\r\n// Just include the class and you're ready to rock! :)\r\ninclude_once(dirname(__FILE__) . '/class.html.php');\r\n```\r\n\r\n----------\r\n\r\n# The $attributes variable\r\nThis variable can be a string like this: `'attribute1=\"value1\" attribute2=\"value2\"'`.\r\nOr an array like this: `array('attribute1' => 'value1', 'attribute2' => 'value2');`.\r\nSo when you're going to set the `$attributes` variable in some function, always remember the style of code that it must to be.\r\n\r\n# Functions\r\n* [HTML::Doctype(string $type);](#doctype)\r\n* [HTML::Image(string $src, mixed $attributes);](#image)\r\n* [HTML::Anchor(string $url, string $label, mixed $attributes);](#anchor)\r\n* [HTML::Email(string $email, string $label);](#email)\r\n* [HTML::LineBreak(integer $count);](#line-break)\r\n* [HTML::Space(integer $count);](#space)\r\n* [HTML::Form(string $action, array $fields, string $name, string $method, string $enctype);](#form)\r\n* [HTML::Open(string $tag, mixed $attributes, array $li_items);](#open--close)\r\n* [HTML::Close();](#open--close)\r\n* [HTML::Version();](#version)\r\n\r\n### Doctype\r\nReturn the specified doctype\r\n\r\n```php\r\n// The below line will print the default doctype, which is HTML5: <!DOCTYPE html>\r\necho HTML::Doctype();\r\n```\r\n\r\n>#### _Availabe Doctypes_\r\n```\r\nhtml5\t\t\t-> HTML5\r\nxhtml11\t\t\t-> (x)HTML 1.1\r\nxhtml1-strict \t-> (x)HTML 1.0 Strict\r\nxhtml1-trans \t-> (x)HTML 1.0 Transitional\r\nxhtml1-frame \t-> (x)HTML 1.0 Frameset\r\nhtml4-strict\t-> HTML4 Strict\r\nhtml4-trans\t\t-> HTML4 Transitional\r\nhtml4-frame\t\t-> HTML4 Frameset\r\n```\r\n\r\n### Image\r\nReturns the `<img />` tag\r\n\r\n```php\r\n// The below line will print: <img src=\"http://example.com/location/to/image.png\" border=\"0\" />\r\necho HTML::Image('http://example.com/location/to/image.png');\r\n```\r\n\r\n### Anchor\r\nReturns the `<a></a>` with the specified attributes.\r\n\r\n```php\r\n// The below line will print: <a href=\"http://lunnaly.com\" target=\"_blank\" title=\"Visit Lunnaly's Website\">Lunnaly</a>\r\necho HTML::Anchor('http://lunnaly.com', 'Lunnaly', array('target' => '_blank', 'title' => 'Visit Lunnaly\\'s Website'));\r\n```\r\n\r\n### Email\r\nReturns a formated 'mailto' link.\r\n\r\n```php\r\n// The below line will print: <a href=\"mailto:email@site.com\">My Email</a>\r\necho HTML::Email('email@site.com', 'My Email');\r\n```\r\n\r\n### Line break\r\nReturns the `<br />` (break) tag.\r\n\r\n```php\r\n// The below line will print <br /><br /><br /> (3 times <br />)\r\necho HTML::LineBreak(3);\r\n```\r\n\r\n### Space\r\nReturns the `&nbsp;` (white space) entity .\r\n\r\n```php\r\n// The below line will print &nbsp;&nbsp;&nbsp; (3 times &nbsp;)\r\necho HTML::Space(3);\r\n```\r\n\r\n### Form\r\nCreate the structure following: `<form>$fields</form>`.\r\n\r\n```php\r\n// The below line will print a 'post' form with the following 'action' attribute: 'my-file.php' and 2 fields which are: 'username' and 'password'.\r\necho HTML::Form('my-file.php', array('text' => array('id' => 'username', 'name' => 'username', 'placeholder' => 'I\\'m a text field! =)'), 'password' => array('id' => 'password', 'name' => 'password', 'placeholder' => 'I\\'m a password input! =)')));\r\n```\r\n\r\n> #### _HTML::Form() Usage_\r\n```\r\necho HTML::Form(the 'action' file, an array with the following structure: type => array(attribute => value));\r\nThat's all you need to print a form. =)\r\n```\r\n\r\n### Open & Close\r\nOpen a tag and pass the specified attributes to the same.\r\n\r\n```php\r\n// The below line will print an opened tag\r\necho HTML::Open('tag', 'attribute=\"value\"');\r\necho 'My content goes here';\r\n// After you've done inserting the content, you must close the tag.\r\necho HTML::Close();\r\n```\r\n\r\n### Version\r\nReturn the script version (major.minor.release)\r\n\r\n```php\r\n// Usage\r\necho HTML::Version();\r\n```","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"HTML Helper","google":"","tagline":"This is a complete PHP class which provide an awesome markup that will make your HTML rendering easier than ever."}